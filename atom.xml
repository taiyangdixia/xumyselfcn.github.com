<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[MingYang's blog]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://blog.xumingyang.cn/"/>
  <updated>2014-12-08T08:19:40.194Z</updated>
  <id>http://blog.xumingyang.cn/</id>
  
  <author>
    <name><![CDATA[MingYang]]></name>
    <email><![CDATA[xumyselfcn@163.com]]></email>
  </author>
  
  <generator uri="http://zespia.tw/hexo/">Hexo</generator>
  
  <entry>
    <title><![CDATA[从Oracle数据库中大量导出文本数据的实践]]></title>
    <link href="http://blog.xumingyang.cn/2014/12/08/%E4%BB%8EOracle%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%AD%E5%A4%A7%E9%87%8F%E5%AF%BC%E5%87%BA%E6%96%87%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%9A%84%E5%AE%9E%E8%B7%B5/"/>
    <id>http://blog.xumingyang.cn/2014/12/08/从Oracle数据库中大量导出文本数据的实践/</id>
    <published>2014-12-08T07:32:25.000Z</published>
    <updated>2014-12-08T08:04:28.000Z</updated>
    <content type="html"><![CDATA[<h3 id="背景：">背景：</h3>
<p>在网页上选择待导出的数据表和字段，从Oracle数据库中导出，以文本方式保存。比较大的一张表估计得有几千万行了。目标导出速度得达到15w行/s左右。</p>
<h2 id="方案：">方案：</h2>
<ul>
<li>通过JDBC连接数据库的方式，从数据库中读取数据，写入文件。</li>
<li>使用Oracle数据库的exp/expdp工具，导出二进制文件，再转换成文本文件。</li>
<li>使用spool，在SQL*PLUS中执行。</li>
<li>使用Pro*C方式。</li>
<li>使用sqluldr2工具。<br><a id="more"></a><h3 id="方案1：">方案1：</h3>
通过JDBC连接数据库的方式导出数据，最开始的想法是这样：</li>
</ul>
<ol>
<li>读取该表的记录数M</li>
<li>设置每次读取的记录数N，计算出读取的次数X=M/N+1</li>
<li>循环X次，每次从数据库中读取N（用的是项目中现有的分页接口）</li>
<li>把结果写到文件中</li>
</ol>
<p>大概下图的样子：</p>
<p><img src="http://img-niren.qiniudn.com/1-1.png" alt=""></p>
<p>测试了下，结果很不好。</p>
<p>于是有了下面的想法：</p>
<ol>
<li>在上面的基础上开三个子线程，连接数据库，读取数据</li>
<li>将每次读取的数据存放在一个队列中</li>
<li>再开一个写文件的子线程，检查队列是否为空，否则把队列中的数据写入到文件中</li>
</ol>
<p>大概是下图的这个样子。</p>
<p><img src="http://img-niren.qiniudn.com/1-2.png" alt=""></p>
<p>测试了下，结果依旧不理想。仔细分析了下各个过程的耗时，发现瓶颈均是在从数据库读取数据这个地方。最开始读取一次大概1s的样子，到最后甚至得需要10s中才能返回一条记录，而且多线程并不能起到加快读取数据的目的。</p>
<p>好吧，瓶颈在数据库读取部分。其实也就表明，这种方法不行啊~</p>
<h3 id="方案2：">方案2：</h3>
<p>这里使用的是oracle提供的expdp工具，使用这个工具的大概步骤如下：</p>
<pre><code>//这是在SQL*PLUS中进行操作
//创建逻辑目录
<span class="operator"><span class="keyword">create</span> directory dpdata3 <span class="keyword">as</span> <span class="string">'/home/oracle/expdp'</span>;</span>
//查看管理员目录下面是否创建成功
<span class="operator"><span class="keyword">select</span> * <span class="keyword">from</span> dba_directories;</span>
//给普通的数据库用户赋予在指定目录的操作权限
<span class="operator"><span class="keyword">grant</span> <span class="keyword">read</span>,<span class="keyword">write</span> <span class="keyword">on</span> directory dpdata3 <span class="keyword">to</span> <span class="keyword">User</span>;</span>
</code></pre><p>在shell命令行中执行：</p>
<pre><code>expdp User/Pwd <span class="variable">TABLES=</span>tableName <span class="variable">dumpfile=</span>expdp.dmp <span class="variable">DIRECTORY=</span>dpdata3;
</code></pre><p>这样在<code>/home/oracle/expdp</code>目录中就生成了expdp.dmp文件，这个文件就是从oracle数据库中导出的二进制数据文件。</p>
<p>但是这个方案有个问题，导出的二进制数据如何转换成文本数据？</p>
<p>找了一下，没有理想的方案。</p>
<p>关于expdp命令的详细信息可以参考<a href="http://shitou118.blog.51cto.com/715507/310033" target="_blank" rel="external">expdp impdp 数据库导入导出命令详解</a></p>
<h3 id="方案3：">方案3：</h3>
<p>使用spool。这里是从某个表中导出数据的spool脚本：</p>
<pre><code><span class="operator"><span class="keyword">set</span> echo <span class="keyword">on</span>;</span>
<span class="operator"><span class="keyword">set</span> feedback <span class="keyword">on</span>;</span>
<span class="operator"><span class="keyword">set</span> trimspool off;</span>
<span class="operator"><span class="keyword">set</span> linesize <span class="number">120</span>;</span>
<span class="operator"><span class="keyword">set</span> pagesize <span class="number">2000</span>;</span>
<span class="operator"><span class="keyword">set</span> newpage <span class="number">1</span>;</span>
<span class="operator"><span class="keyword">set</span> heading <span class="keyword">on</span>;</span>
<span class="operator"><span class="keyword">set</span> term off;</span>
<span class="operator"><span class="keyword">set</span> termout <span class="keyword">on</span>;</span>
<span class="operator"><span class="keyword">set</span> timing off;</span>
spool /home/oracle/xmy/oracle/spool/data.txt;
<span class="operator"><span class="keyword">select</span> <span class="string">'"'</span>||id||<span class="string">'"'</span>||<span class="string">','</span>||lasttime||<span class="string">','</span>||taskname||<span class="string">','</span>||algtype||<span class="string">','</span>||to_number(to_char(starttime,<span class="string">'YYYYMMDD'</span>)) <span class="keyword">from</span> common;</span>
spool off;
</code></pre><p>这里就是从common表中导出id、lasttime等字段。具体的执行方法是登陆sqlplus，然后执行</p>
<pre><code><span class="comment">#登陆</span>
sqlplus / <span class="keyword">as</span> sysdba
<span class="comment">#@后面跟的是脚本的路径</span>
<span class="decorator">@spool.sh</span>
</code></pre><p>这种方法效率也是比较低。</p>
<h3 id="方案4">方案4</h3>
<p>仿照网上的Pro*C程序一直编译出错，恨啊~据说这个的效率非常高。</p>
<h3 id="方案5">方案5</h3>
<p>这个方案也是最后准备采用的。</p>
<p>sqluldr2工具是由<a href="http://weibo.com/dbatools" target="_blank" rel="external">平民架构</a>开发的，有免费版和商业版之分，不过我这里免费版就已经够用了。这个工具可以在<a href="http://www.anysql.net/download" target="_blank" rel="external">anysql</a>下载到（第5个，Oracle文本导出工具），里面有windows/linux的32/64位四个版本的执行文件。</p>
<p>我是把这个工具放在了/usr/local/bin中，因为这个路径已经在环境变量中设置了，所以现在可以全局使用这个命令。</p>
<p>直接使用命令：</p>
<pre><code>sqluldr2_linux64_10204.bin <span class="variable">user=</span>user/pwd <span class="variable">query=</span><span class="string">"select * from common"</span> <span class="variable">file=</span>data.csv <span class="variable">head=</span>no <span class="variable">charset=</span>UTF8
</code></pre><p>就可以导出common表中的数据了，在当前路径中生成文件data.csv。</p>
<p>这里有关于expdp和sqluldr2的性能测试截图：</p>
<p>这个是expdp工具的测试截图<br><img src="http://img-niren.qiniudn.com/expdp-modify.png" alt=""><br>这个是sqluldr2工具的测试截图<br><img src="http://img-niren.qiniudn.com/sqluldr2-modify.png" alt=""></p>
<p>两者导出的数据都是一样的，一共26405520行记录，大约1.4GG。两者耗时相差不大，都在两分钟以内，不过，可以发现sqluldr2甚至比oracle官方提供的expdp工具还要快一些。</p>
<p>在实际项目中遇到了一个问题：这个工具（不止这个工具，除了第一种方案，其他的都需要）必须得在有oracle环境下才能运行，项目部署的用户和数据库的用户并不是同一个。</p>
<p>一个方法就是在当前用户下，切换到另外一个用户去执行命令，但是这就需要输入数据库用户的用户名和密码，查资料可以通过安装expect工具，写成shell脚本，然后程序直接调用执行这个脚本。</p>
<p>另一个方法是在数据库用户下部署一个server，当需要导出数据的时候，给该server发送相应的信息（包括需要导出的表名，字段名）。server接受信息之后开始执行数据导出工作。</p>
<p>现在实现了第二种方法，其实这两个方法都挺麻烦的，不知道有没有更简便的方法。</p>
<h2 id="参考资料">参考资料</h2>
<ol>
<li><a href="http://shitou118.blog.51cto.com/715507/310033" target="_blank" rel="external">expdp impdp 数据库导入导出命令详解</a></li>
<li><a href="http://blog.csdn.net/cmingjun/article/details/5343019" target="_blank" rel="external">SQLPLUS SPOOL命令使用详解</a></li>
<li><a href="http://stackoverflow.com/questions/11555847/how-to-pump-data-to-txt-file-using-oracle-datapump" target="_blank" rel="external">How to pump data to txt file using Oracle datapump?</a></li>
<li><a href="https://asktom.oracle.com/pls/apex/f?p=100:11:0::::P11_QUESTION_ID:459020243348" target="_blank" rel="external">关于Pro*C的一篇国外的文章</a></li>
<li><a href="http://blog.csdn.net/leexide/article/details/17485451" target="_blank" rel="external">Shell脚本学习之expect命令</a></li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="背景：">背景：</h3>
<p>在网页上选择待导出的数据表和字段，从Oracle数据库中导出，以文本方式保存。比较大的一张表估计得有几千万行了。目标导出速度得达到15w行/s左右。</p>
<h2 id="方案：">方案：</h2>
<ul>
<li>通过JDBC连接数据库的方式，从数据库中读取数据，写入文件。</li>
<li>使用Oracle数据库的exp/expdp工具，导出二进制文件，再转换成文本文件。</li>
<li>使用spool，在SQL*PLUS中执行。</li>
<li>使用Pro*C方式。</li>
<li>使用sqluldr2工具。<br>]]>
    
    </summary>
    
      <category term="oracle spool expdp sqluldr2" scheme="http://blog.xumingyang.cn/tags/oracle-spool-expdp-sqluldr2/"/>
    
  </entry>
  
</feed>
